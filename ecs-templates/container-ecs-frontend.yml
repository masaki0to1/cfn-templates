AWSTemplateFormatVersion: "2010-09-09"
Description: Provides Backend base.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: System Configuration
        Parameters:
          - Env
          - Stack
          - Owner
      - Label:
          default: VPC Configuration
        Parameters:
          - IdVpc
          - IdSubnetPublicIngress1A
          - IdSubnetPublicIngress1C
          - IdSubnetPrivateContainer1A
          - IdSubnetPrivateContainer1C
      -
        Label:
          default: Security Group Configuration
        Parameters:
          - IdSecurityGroupInternet
          - IdSecurityGroupBackendContainer
      -
        Label:
          default: ALB Configuration
        Parameters:
          - NameDnsAlbBackend
          - ArnTargetGroupBlue
          - ArnTargetGroupGreen
      -
        Label:
          default: Container Configuration
        Parameters:
          - NameBackendContainer
          - PortBackendContainer

    ParameterLabels:
      Stack:
        default: 'Stack: *Only lowercase alphanumeric characters and hyphens are allowed.'
      Owner:
        default: 'Owner: *Only lowercase alphanumeric characters and hyphens are allowed. Please put a hyphen between your first name and last name.'

Parameters:
  Env:
    Description: Specify the Env Tag. 
    Type: String
    Default: dev
    AllowedValues:
      - prod
      - stage
      - test
      - dev
      - common

  Stack:
    Description: Specify the Stack Tag.
    Type: String
    Default: network
    AllowedPattern: ^[a-z]([\-]{0,1}[a-z0-9]+)*$
    ConstraintDescription: This Parameter must match pattern ^[a-z]([\-]{0.1}[a-z0-9]+)*$

  Owner:
    Description: Enter the name of the person creating this stack.
    Type: String
    Default: masaki-ishimoto
    AllowedPattern: ^[a-z]([\-]{0,1}[a-z0-9]+)*$
    ConstraintDescription: This Parameter must match pattern ^[a-z]([\-]{0.1}[a-z0-9]+)*$

  IdVpc:
    Description : Specify the VPC ID.
    Type: AWS::EC2::VPC::Id
    Default: vpc-06f279a2216b58f3b

  IdSubnetPublicIngress1A:
    Description: Specify the ID of the IngressPublicSubnet1A for ALB.
    Type: AWS::EC2::Subnet::Id
    Default: subnet-09a12bf5e1c013828

  IdSubnetPublicIngress1C:
    Description: Specify the ID of the IngressPublicSubnet1C for ALB.
    Type: AWS::EC2::Subnet::Id
    Default: subnet-07748b69afa51f5b5

  IdSubnetPrivateContainer1A:
    Description: Specify the ID of the PrivateSubnet1A for Container.
    Type: AWS::EC2::Subnet::Id
    Default: subnet-0b41b5547b3bf43f1

  IdSubnetPrivateContainer1C:
    Description: Specify the ID of the PrivateSubnet1C for Container.
    Type: AWS::EC2::Subnet::Id
    Default: subnet-0b41b5547b3bf43f1

  IdSecurityGroupInternet:
    Description:  Specify the ID of the IngressInternetSecurityGroup for ALB.
    Type: AWS::EC2::SecurityGroup::Id
    Default: sg-0e28f96b72c1d79e2
  
  IdSecurityGroupBackendContainer:
    Description: Specify the ID of the EgressBackendContainerSecurityGroup.
    Type: AWS::EC2::SecurityGroup::Id
    Default: sg-0cb3b758ad2bbf61a
    
  NameDnsAlbBackend:
    Description: Specify the DNS name (A Record) of the Backend ALB.
    Type: String
    Default: internal-dev-test-alb-internal-173798352.ap-northeast-1.elb.amazonaws.com

  ArnTargetGroupBlue:
    Description: Specify the ARN of the TargetGroupBlue.
    Type: String
    Default: arn:aws:elasticloadbalancing:ap-northeast-1:727008614144:targetgroup/dev-test-blue-tg/77e5fc6479c6f701

  ArnTargetGroupGreen:
    Description: Specify the ARN of the TargetGroupGreen.
    Type: String
    Default: arn:aws:elasticloadbalancing:ap-northeast-1:727008614144:targetgroup/dev-test-green-tg/9a490a1eea3dc158

  NameBackendContainer:
    Description: Enter the Name for Backend Container.
    Type: String
    Default: Backend-app
  
  PortBackendContainer:
    Description: Specify the Port Number for Backend Container.
    Type: String
    Default: 80

    
Resources:
#-----------------------------------#
# IAM
#-----------------------------------#
  # ServiceLinkedRoleEcs:
  #   Type: AWS::IAM::ServiceLinkedRole
  #   Properties:
  #     AWSServiceName: ecs.amazonaws.com
  #     Description: Service Linked Role for ECS created by CloudFormation in the Backend-container Stack.

  RoleTaskDefinition:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              ArnLike:
                aws:SourceArn: !Sub 'arn:aws:ecs:ap-northeast-1:${AWS::AccountId}:*'
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
      RoleName: TaskDefinitionRole

  PolicyTaskDefinition:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: TaskDefinitionPolicy
      Roles:
        - !Ref RoleTaskDefinition
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action: '*'
            Resource: '*'


#-----------------------------------#
# ECS
#-----------------------------------#
  TaskDefinitionBackend:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${Env}-${Stack}-backend-task-definition
      ContainerDefinitions:
        - 
          Name: !Ref NameBackendContainer
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/dev-container-ecr-repository-backend:v1
          Essential: true
          Cpu: 256
          MemoryReservation: 512
          ReadonlyRootFilesystem: true
          PortMappings:
            - ContainerPort: !Ref PortBackendContainer
              HostPort: 80
              Protocol: tcp
          Environment:
            - Name: SESSION_SECRET_KEY
              Value: 41b678c65b37bf99c37bcab522802760
            - Name: APP_SERVICE_HOST
              Value: !Sub http://${NameDnsAlbBackend}
            - Name: NOTIF_SERVICE_HOST
              Value: !Sub http://${NameDnsAlbBackend}
          LogConfiguration:
              LogDriver: awslogs
              Options: 
                awslogs-create-group: true
                awslogs-group: !Sub /ecs/${Env}-${Stack}-backend-task-definition
                awslogs-region: !Ref AWS::Region
                awslogs-stream-prefix: !Sub /${Env}-${Stack}/${NameBackendContainer}
      Cpu: 512
      Memory: 1024
      ExecutionRoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !GetAtt RoleTaskDefinition.Arn
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner

  ClusterBackend:
    Type: AWS::ECS::Cluster
    Properties:
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      ClusterName: !Sub ${Env}-${Stack}-backend-cluster
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner

  ServiceBackend:
    Type: AWS::ECS::Service
    Properties: 
      CapacityProviderStrategy: 
        - Base: 2
          CapacityProvider: FARGATE
          Weight: 1
        - Base: 0
          CapacityProvider: FARGATE_SPOT
          Weight: 1
      Cluster: !GetAtt ClusterBackend.Arn
      DeploymentController:
        Type: CODE_DEPLOY
      DesiredCount: 2
      EnableECSManagedTags: true
      EnableExecuteCommand: true ######
      HealthCheckGracePeriodSeconds: 120
      # LaunchType: FARGATE #If a capacityProviderStrategy is specified, the launchType parameter must be omitted.
      LoadBalancers: 
        - ContainerName: !Ref NameBackendContainer
          ContainerPort: !Ref PortBackendContainer
          TargetGroupArn: !Ref ArnTargetGroupBlue
        - ContainerName: !Ref NameBackendContainer
          ContainerPort: !Ref PortBackendContainer
          TargetGroupArn: !Ref ArnTargetGroupGreen
      NetworkConfiguration: 
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED 
          SecurityGroups:
            - !Ref IdSecurityGroupBackendContainer
          Subnets:
            - !Ref IdSubnetPrivateContainer1A
            - !Ref IdSubnetPrivateContainer1C
      # PlacementConstraints: 
      #   - PlacementConstraint
      # PlacementStrategies: 
      #   - PlacementStrategy
      PlatformVersion: 1.4.0
      # PropagateTags: 'NONE'
      SchedulingStrategy: REPLICA
      ServiceName: ecs-backend-service
      # ServiceRegistries: 
      #   - !GetAtt ServiceDiscovery.Arn ####
      TaskDefinition: !Ref TaskDefinitionBackend
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner

  CloudWatchLogsBackend:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName: /ecs/sbcntr-backend-def
      RetentionInDays: 14
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner

#-----------------------------------#
# ServiceDiscovery (Cloud Map)
#-----------------------------------#
  ServiceDiscovery:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: ecs-backend-service
      Description: 'Service Discovery for ECS.'
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 60
        NamespaceId: !GetAtt ServiceDiscoveryPrivateDnsNamespace.Id
      # HealthCheckConfig:
      #   FailureThreshold: String
      #   ResourcePath: "String"
      #   Type: "String"
      # HealthCheckCustomConfig:
      #   FailureThreshold: String
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner

  ServiceDiscoveryPrivateDnsNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties: 
      Description: 'Service Discovery for ECS'
      Name: local
      # Properties: 
      #   DnsProperties:
      #     SOA:
      #       TTL: 60            
      Vpc: !Ref IdVpc
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner

#--------------------backend-tg"
#-----------------------------------#
  AlbBackend:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${Env}-${Stack}-ingress-backend-alb
      Type: application
      Scheme: internet-facing
      SecurityGroups:
        - !Ref IdSecurityGroupInternet
      Subnets:
        - !Ref IdSubnetPublicIngress1A
        - !Ref IdSubnetPublicIngress1C
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: false
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner

  TargetGroupBackend:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${Env}-${Stack}-backend-tg
      Port: 80
      Protocol: HTTP
      TargetType: ip
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /healthcheck
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 2
      Matcher: 
        HttpCode: 200
      VpcId: !Ref IdVpc
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner
  
  ListenerBackend:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
        DefaultActions: 
          - TargetGroupArn: !Ref TargetGroupBackend
            Type: forward
        LoadBalancerArn: !Ref AlbBackend
        Port: 80
        Protocol: HTTP
