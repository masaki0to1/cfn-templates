AWSTemplateFormatVersion: "2010-09-09"
Description: Provides frontend base.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: System Configuration
        Parameters:
          - Env
          - Stack
          - Owner

    ParameterLabels:
      Stack:
        default: 'Stack: *Only lowercase alphanumeric characters and hyphens are allowed.'
      Owner:
        default: 'Owner: *Only lowercase alphanumeric characters and hyphens are allowed. Please put a hyphen between your first name and last name.'

Parameters:
  Env:
    Description: Specify the Env Tag. 
    Type: String
    Default: dev
    AllowedValues:
      - prod
      - stage
      - test
      - dev
      - common

  Stack:
    Description: Specify the Stack Tag.
    Type: String
    Default: network
    AllowedPattern: ^[a-z]([\-]{0,1}[a-z0-9]+)*$
    ConstraintDescription: This Parameter must match pattern ^[a-z]([\-]{0.1}[a-z0-9]+)*$

  Owner:
    Description: Enter the name of the person creating this stack.
    Type: String
    Default: masaki-ishimoto
    AllowedPattern: ^[a-z]([\-]{0,1}[a-z0-9]+)*$
    ConstraintDescription: This Parameter must match pattern ^[a-z]([\-]{0.1}[a-z0-9]+)*$

  IdVpc:
    Description : Specify the VPC ID.
    Type: AWS::EC2::VPC::Id

  IdSecurityGroupInternet:
    Description:  Specify the SecurityGroup ID for ALB.
    Type: AWS::EC2::SecurityGroup::Id

  IdSubnetPublicIngress1A:
    Description: Specify the IngressPublicSubnet1A ID for ALB.
    Type: AWS::EC2::Subnet::Id

  IdSubnetPublicIngress1C:
    Description: Specify the IngressPublicSubnet1C ID for ALB.
    Type: AWS::EC2::Subnet::Id
    
  DnsAlbBackend:
    Description: Specify the DNS A record of the Backend ALB.
    Type: String

Resources:
#-----------------------------------#
# ECS
#-----------------------------------#
  ClusterFrontend:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${Env}-${Stack}-frontend-cluster
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner

  TaskDefinitionFrontend:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${Env}-${Stack}-frontend-task-definition
      ContainerDefinitions:
        - 
          Name: app
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/sbcntr-frontend:v1"
          Essential: true
          Cpu: 256
          MemoryReservation: 512
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp
          Environment:
            - Name: SESSION_SECRET_KEY
              Value: 41b678c65b37bf99c37bcab522802760
            - Name: APP_SERVICE_HOST
              Value: !Sub "http://${DnsAlbBackend}"
            - Name: NOTIF_SERVICE_HOST
              Value: !Sub "http://${DnsAlbBackend}"
          LogConfiguration:
              LogDriver: awslogs
              Options: 
                awslogs-group: !Sub "/ecs/${Env}-${Stack}-frontend-def"
                awslogs-region: !Ref AWS::Region
                awslogs-stream-Stack: ecs
      Cpu: 512
      Memory: 1024
      ExecutionRoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner

  CloudWatchLogsFrontend:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName: /ecs/sbcntr-frontend-def
      RetentionInDays: 14
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner
#-----------------------------------#
# ALB
#-----------------------------------#
  AlbFrontend:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub "${Env}-${Stack}-alb-ingress-frontend"
      Type: application
      Scheme: internet-facing
      SecurityGroups:
        - !Ref IdSecurityGroupInternet
      Subnets:
        - !Ref IdSubnetPublicIngress1A
        - !Ref IdSubnetPublicIngress1C
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: false
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner
        - Key: Cost
          Value: !Ref Cost

  TargetGroupFrontend:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub "${Env}-${Stack}-target-group-frontend"
      Port: 80
      Protocol: HTTP
      TargetType: ip
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /healthcheck
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 2
      Matcher: 
        HttpCode: 200
      VpcId: !Ref IdVpc
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner
  
  ListenerFrontend:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
        DefaultActions: 
          - TargetGroupArn: !Ref TargetGroupFrontend
            Type: forward
        LoadBalancerArn: !Ref AlbFrontend
        Port: 80
        Protocol: HTTP
