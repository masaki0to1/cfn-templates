AWSTemplateFormatVersion: 2010-09-09
Description: Provide ELB resources.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: System Configuration
        Parameters:
          - Env
          - Stack
          - Owner
      - 
        Label: 
          default: ALB Configuration
        Parameters:
          - IdSubnetPrivateContainer1A
          - IdSubnetPrivateContainer1C
          - IdSecurityGroupInternalLoadBalancer
      - 
        Label:
          default: ALB TargetGroups Configuration
        Parameters:
          - IdVpc

    ParameterLabels:
      Stack:
        default: 'Stack: *Only lowercase alphanumeric characters and hyphens are allowed.'
      Owner:
        default: 'Owner: *Only lowercase alphanumeric characters and hyphens are allowed. Please put a hyphen between your first name and last name.'

Parameters:
  Env:
    Description: Specify the Env Tag. 
    Type: String
    Default: dev
    AllowedValues:
      - prod
      - stage
      - test
      - dev
      - common

  Stack:
    Description: Specify the Stack Tag.
    Type: String
    Default: endpoint
    AllowedPattern: ^[a-z]([\-]{0,1}[a-z0-9]+)*$
    ConstraintDescription: This Parameter must match pattern ^[a-z]([\-]{0.1}[a-z0-9]+)*$

  Owner:
    Description: Enter the name of the person creating this stack.
    Type: String
    Default: masaki-ishimoto
    AllowedPattern: ^[a-z]([\-]{0,1}[a-z0-9]+)*$
    ConstraintDescription: This Parameter must match pattern ^[a-z]([\-]{0.1}[a-z0-9]+)*$

  IdVpc:
    Description: Specify the VPC ID for ALB TargetGroups.
    Type: AWS::EC2::VPC::Id

  IdSubnetPrivateContainer1A:
    Description: Specify the ID of the ContainerPrivateSubnet1A for Internal Load Balancer.
    Type: AWS::EC2::Subnet::Id
  
  IdSubnetPrivateContainer1C:
    Description: Specify the ID of the ContainerPrivateSubnet1C for Internal Load Balancer.
    Type: AWS::EC2::Subnet::Id

  IdSecurityGroupInternalLoadBalancer:
    Description: Specify the ID of the EgressSecurityGroup for Internal Load Balancer.
    Type: AWS::EC2::SecurityGroup::Id
  
Resources: 
#-------------------------------------#
# ALB
#-------------------------------------#
  Alb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      Name: !Sub ${Env}-${Stack}-alb-internal
      IpAddressType: ipv4
      LoadBalancerAttributes: 
        - Key: deletion_protection.enabled
          Value: false
        - Key: load_balancing.cross_zone.enabled
          Value: true
        - Key: access_logs.s3.enabled
          Value: false
        # - Key: access_logs.s3.bucket
          # Value: !Ref NameS3BucketAccessLogs
        # - Key: ipv6.deny_all_igw_traffic #ipv6 only
        #   Value: false
        - Key: idle_timeout.timeout_seconds 
          Value: 5
        - Key: routing.http.desync_mitigation_mode 
          Value: defensive
        - Key: routing.http.drop_invalid_header_fields.enabled
          Value: false
        - Key: routing.http.preserve_host_header.enabled
          Value: false
        - Key: routing.http.x_amzn_tls_version_and_cipher_suite.enabled
          Value: false
        - Key: routing.http.xff_client_port.enabled
          Value: false
        - Key: routing.http.xff_header_processing.mode
          Value: append
        - Key: routing.http2.enabled
          Value: true
        - Key: waf.fail_open.enabled
          Value: false
      Scheme: internal
      SecurityGroups: 
        - !Ref IdSecurityGroupInternalLoadBalancer
      Subnets: 
        - !Ref IdSubnetPrivateContainer1A
        - !Ref IdSubnetPrivateContainer1C
      Type: application
      Tags: 
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner
        - Key: Cost
          Value: !Sub ${Env}-${Stack}

  ListenerAlbBlue:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      # Certificates: 
      #   - Certificate
      DefaultActions: 
        - Type: forward
          TargetGroupArn: !Ref TargetGroupBlue
      LoadBalancerArn: !Ref Alb
      Port: 80
      Protocol: HTTP 
      # SslPolicy: String

  ListenerAlbGreen:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      # Certificates: 
      #   - Certificate
      DefaultActions: 
        - Type: forward
          TargetGroupArn: !Ref TargetGroupGreen
      LoadBalancerArn: !Ref Alb
      Port: 10080
      Protocol: HTTP 
      # SslPolicy: String

  # ListenerCertificateAlb:
  #   Type: AWS::ElasticLoadBalancingV2::ListenerCertificate
  #   Properties: 
  #     Certificates: 
  #       - !Ref CertificateAlb
  #     ListenerArn: !Ref ListenerAlb

  TargetGroupBlue:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${Env}-${Stack}-blue-tg
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /healthcheck
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 2
      IpAddressType: ipv4
      Matcher:
        HttpCode: 200
      Port: 80
      Protocol: HTTP
      ProtocolVersion: HTTP1
      TargetType: ip
      VpcId: !Ref IdVpc
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner
        - Key: Cost
          Value: !Sub ${Env}-${Stack}

  TargetGroupGreen:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${Env}-${Stack}-green-tg
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /healthcheck
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 2
      IpAddressType: ipv4
      Matcher:
        HttpCode: 200
      Port: 80
      Protocol: HTTP
      ProtocolVersion: HTTP1
      TargetType: ip
      VpcId: !Ref IdVpc
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Stack
          Value: !Ref Stack
        - Key: Owner
          Value: !Ref Owner
        - Key: Cost
          Value: !Sub ${Env}-${Stack}

Outputs:
  ARecordAlbBackend:
    Value: !GetAtt Alb.DNSName
  ArnTargetGroupBlue:
    Value: !Ref TargetGroupBlue
  ArnTargetGroupGreen:
    Value: !Ref TargetGroupGreen